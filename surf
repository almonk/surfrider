#!/usr/bin/env ruby
require "./rider/Surfrider.rb"
include Surfrider

def parse_input
  if ARGV[0] == "describe" && ARGV[1]
    describe(ARGV[1])
  end

  if ARGV[0] == "describe" && ARGV[1] == nil
    describe_all
  end

  if ARGV[0] == "follow"
    follow(ARGV[1])
  end

  if ARGV[0] == "dispatch"
    dispatch(ARGV[1])
  end

  if ARGV[0] == "create"
    create_new
  end

  if ARGV[0] == "serve"
    serve
  end

  if ARGV[0] == "replay"
    replay
  end
end

private

def describe(sobject)
  puts "\n"
  puts "=> #{sobject}"
  Surfrider.client.describe(sobject).fields.each do |field|
    puts "#{field.name}"
  end
end

def describe_all
  Surfrider.client.describe.each do |sobject|
    puts "#{sobject.name}"
  end
end

def follow(sobject)
  notifyForOperationCreate = false
  notifyForOperationUpdate = false
  notifyForOperationDelete = false
  notifyForOperationUndelete = false

  operative_phrase = "Change"

  case ARGV[2]
  when "All"
    operative_phrase = "Change"

    notifyForOperationCreate = true
    notifyForOperationUpdate = true
    notifyForOperationDelete = true
    notifyForOperationUndelete = true
  when "Create"
    operative_phrase = "Create"
    notifyForOperationCreate = true
  when "Update"
    operative_phrase = "Update"
    notifyForOperationUpdate = true
  when "Delete"
    operative_phrase = "Delete"
    notifyForOperationDelete = true
  when "Undelete"
    operative_phrase = "Undelete"
    notifyForOperationUndelete = true
  else
    operative_phrase = "Change"
    notifyForOperationCreate = true
    notifyForOperationUpdate = true
    notifyForOperationDelete = true
    notifyForOperationUndelete = true
  end

  fields = ARGV[3...].join(", ")
  Surfrider.client.create!("PushTopic",
                           ApiVersion: "49.0",
                           Name: "#{sobject}#{operative_phrase}",
                           Description: "All account records",
                           NotifyForOperationCreate: notifyForOperationCreate,
                           NotifyForOperationUpdate: notifyForOperationUpdate,
                           NotifyForOperationUndelete: notifyForOperationUndelete,
                           NotifyForOperationDelete: notifyForOperationDelete,
                           NotifyForFields: "All",
                           Query: "select Id, #{fields} from #{sobject}")

  puts "Created new streaming push topic: #{sobject}/#{operative_phrase}"

  last_line = 0
  file = File.open("app.rb", "r+")
  file.each { last_line = file.pos unless file.eof? }

  file.seek(last_line, IO::SEEK_SET)
  file.print %{
        with "#{sobject}/#{operative_phrase}" do |record|
          # Your code
        end
      end
    }
  file.close

  system("rufo app.rb")
end

def create_new
  File.open("app.rb", "w") do |f|
    f.write(%{
      require "./rider/Surfrider.rb"
      include Surfrider

      Surf.run do
        # ðŸŒŠ Go surf...
      end
    })
  end

  puts "Created new Surfrider app at: ./app.rb"

  system("rufo app.rb")
end

def dispatch(event)
  Surfrider.client.create!("PlatformEvent",
                           Name: "#{event}__e")
end

def serve
  system("ruby app.rb")
end

parse_input
