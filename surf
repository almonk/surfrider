#!/usr/bin/env ruby
require "./rider/Surfrider.rb"
include Surfrider

def parse_input
  if ARGV[0] == "describe" && ARGV[1]
    describe(ARGV[1])
  end

  if ARGV[0] == "describe" && ARGV[1] == nil
    describe_all
  end

  if ARGV[0] == "follow"
    follow(ARGV[1])
  end

  if ARGV[0] == "dispatch"
    dispatch(ARGV[1])
  end
end

private

def describe(sobject)
  puts "\n"
  puts "=> #{sobject}"
  Surfrider.client.describe(sobject).fields.each do |field|
    puts "#{field.name}"
  end
end

def describe_all
  Surfrider.client.describe.each do |sobject|
    puts "#{sobject.name}"
  end
end

def follow(sobject)
  fields = ARGV[2...].join(", ")
  Surfrider.client.create!("PushTopic",
                           ApiVersion: "29.0",
                           Name: "#{sobject}Change",
                           Description: "All account records",
                           NotifyForFields: "All",
                           Query: "select Id, #{fields} from #{sobject}")

  puts "Created new streaming push topic"

  last_line = 0
  file = File.open("app.rb", "r+")
  file.each { last_line = file.pos unless file.eof? }

  file.seek(last_line, IO::SEEK_SET)
    file.print %{
        with "#{sobject}/Change" do |record|
          # Your code
        end
      end
    }
  file.close

  system("rufo app.rb")
end

def dispatch(event)
  Surfrider.client.create!("PlatformEvent",
                           Name: "#{event}__e")
end

parse_input
